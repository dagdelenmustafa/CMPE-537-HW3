# -*- coding: utf-8 -*-
"""DataAugmention.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ID4xZ2avfZl8FDg1_natty7S7mAy5vyq

#Data Augmentation

##Imports
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from PIL import Image
import cv2

from imutils import paths
from collections import Counter

from keras.preprocessing.image import ImageDataGenerator

from google.colab import drive

drive.mount('/content/gdrive')
root_path = 'gdrive/My Drive/Colab Notebooks/Image Classification/'

training_dir = root_path + 'Caltech20/training/'
dir = root_path + 'Aug/'
aug_dir = root_path + 'yin_yang/'

"""##Functions"""

classes = ['airplanes',
 'anchor',
 'background_class',
 'barrel',
 'camera',
 'car_side',
 'dalmatian',
 'Faces',
 'ferry',
 'headphone',
 'lamp',
 'pizza',
 'pyramid',
 'snoopy',
 'soccer_ball',
 'stop_sign',
 'strawberry',
 'sunflower',
 'water_lilly',
 'windsor_chair',
 'yin_yang']

def dataset_prep(dir_path, classes):
  
  labels = []
  X = []

  for imagePath in paths.list_images(dir_path):
    
    image_class = imagePath.split("/")[-2]

    # img = Image.open(imagePath) 
    # image_array = np.asarray(img) 
    # X.append(image_array)

    i = classes.index(image_class) + 1
    labels.append(i)


  return np.array(X), np.array(labels)

"""##Image Generator"""

datagen = ImageDataGenerator(    
    featurewise_center=False,
    samplewise_center=False,
    featurewise_std_normalization=False,
    samplewise_std_normalization=False,
    zca_whitening=False,
    zca_epsilon=1e-06,
    rotation_range=45,
    width_shift_range=[-20,20],
    height_shift_range=[-20,20],
    brightness_range=[0.5,1.0],
    shear_range=0.0,
    zoom_range=[0.9,1.0],
    channel_shift_range=0.0,
    fill_mode="nearest",
    cval=0.0,
    horizontal_flip=True,
    vertical_flip=True,
    rescale=None,
    preprocessing_function=None,
    data_format=None,
    validation_split=0.0,
    dtype=None)

"""###Single Image"""

# imagePath = training_dir + 'strawberry/image_0130.jpg'
  # img = Image.open(imagePath)
  # image_array = np.asarray(img) 
  # samples = np.expand_dims(image_array, 0)
  # print(samples.shape)

# iter = datagen.flow(samples, batch_size=1)

# for i in range(9):
	
#   plt.subplot(330 + 1 + i)
#   batch = iter.next()
#   image = batch[0].astype('uint8')
#   plt.imshow(image)

# plt.show()

"""##Dataset"""

X, y = dataset_prep(training_dir, classes)

X.shape

counter = Counter(y)
print(counter)

for i in range(1,22):
  print(i, classes[i-1], '\t',counter[i])

iter = datagen.flow_from_directory(
    dir, 
    batch_size=32,
    shuffle=True,
    seed=1234,
    save_to_dir=aug_dir,
    save_format='jpg',
    save_prefix='aug')

for i in range(20):
  batch = iter.next()

# for i in range(9):
	
#   plt.subplot(330 + 1 + i)
#   batch = iter.next()
#   image = batch[0].astype('uint8')
#   image = np.squeeze(image, axis=0)
#   plt.imshow(image)

# plt.show()